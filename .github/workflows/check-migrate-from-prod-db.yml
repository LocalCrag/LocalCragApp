name: Check Migrate from prod DB
run-name: Check Migrate from prod DB ðŸ§ª

on:
  pull_request_target:
    branches:
      - main
      - next
jobs:
  check-migrate-from-prod-db:
    environment: Testing
    runs-on: ubuntu-latest
    services:
      test_db:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: localcrag_test
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:

      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.14

      - name: Install pipenv
        run: pip install pipenv

      - name: Installing pipenv dependencies
        run: |
          cd server/src
          pipenv install --deploy --ignore-pipfile

      - name: Pull newest prod dump from backup server
        run: |
          echo "${{ secrets.BACKUP_SERVER_SSH_KEY }}" >> backup_key.pem
          chmod 600 backup_key.pem
          mkdir -p server/tests/dumps
          scp -i backup_key.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null  ${{ secrets.BACKUP_SERVER_USER }}@${{ secrets.BACKUP_SERVER_IP }}:${{ secrets.BACKUP_SERVER_DUMPPATH }} server/tests/dumps/localcrag_prod_dump.sql    

      - name: Setup database with prod dump
        run: |
          export PGPASSWORD='postgres'; psql -h 0.0.0.0 -p 5432 -U postgres -d localcrag_test < server/scripts/create_uuid_extension.sql
          export PGPASSWORD='postgres'; pg_restore --no-privileges --no-owner -h 0.0.0.0 -p 5432 -U postgres -d localcrag_test server/tests/dumps/localcrag_prod_dump.sql

      - name: Run Migrations
        run: |
          cd server/src
          export PYTHONPATH=.
          export LOCALCRAG_CONFIG=config/test-ci.cfg
          pipenv run flask db upgrade

