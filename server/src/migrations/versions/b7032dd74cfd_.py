"""empty message

Revision ID: b7032dd74cfd
Revises: 3619ac5c946b
Create Date: 2024-02-09 22:54:09.183498

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy import orm
from sqlalchemy.orm import declarative_base

# revision identifiers, used by Alembic.
revision = "b7032dd74cfd"
down_revision = "3619ac5c946b"
branch_labels = None
depends_on = None

Base = declarative_base()


class Line(Base):
    __tablename__ = "lines"

    id = sa.Column(sa.String, primary_key=True)


class LinePath(Base):
    __tablename__ = "line_paths"

    id = sa.Column(sa.String, primary_key=True)
    order_index_for_line = sa.Column(sa.Integer)
    line_id = sa.Column(sa.String)


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("line_paths", schema=None) as batch_op:
        batch_op.add_column(sa.Column("order_index_for_line", sa.Integer(), server_default="0", nullable=False))

    # Set initial order IDs
    bind = op.get_bind()
    session = orm.Session(bind=bind)

    lines = session.query(Line).all()
    for line in lines:
        line_order_index = 0
        line_paths = session.query(LinePath).filter_by(line_id=line.id).all()
        session.add_all(line_paths)
        for line_path in line_paths:
            line_path.order_index_for_line = line_order_index
            line_order_index += 1

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("line_paths", schema=None) as batch_op:
        batch_op.drop_column("order_index_for_line")

    # ### end Alembic commands ###
