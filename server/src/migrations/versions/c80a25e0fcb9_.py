"""empty message

Revision ID: c80a25e0fcb9
Revises: e6c7aa5972c5
Create Date: 2024-04-19 08:55:17.871786

"""
import datetime

from alembic import op
import sqlalchemy as sa
from sqlalchemy import text, orm
from sqlalchemy.orm import declarative_base

# revision identifiers, used by Alembic.
revision = 'c80a25e0fcb9'
down_revision = 'e6c7aa5972c5'
branch_labels = None
depends_on = None

Base = declarative_base()


class Ascent(Base):
    __tablename__ = 'ascents'

    id = sa.Column(sa.String, primary_key=True)
    year = sa.Column(sa.Integer, nullable=True)
    date = sa.Column(sa.Date(), nullable=True)
    ascent_date = sa.Column(sa.Date(), nullable=True)


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('ascents', schema=None) as batch_op:
        batch_op.add_column(sa.Column('ascent_date', sa.Date(), nullable=True))

    # Set initial order IDs
    bind = op.get_bind()
    session = orm.Session(bind=bind)

    ascents = session.query(Ascent).all()
    session.add_all(ascents)
    for ascent in ascents:
        if ascent.date:
            ascent.ascent_date = ascent.date
        else:
            ascent.ascent_date = datetime.datetime.strptime(str(ascent.year), '%Y').date()
    session.commit()

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('ascents', schema=None) as batch_op:
        batch_op.drop_column('ascent_date')

    # ### end Alembic commands ###
