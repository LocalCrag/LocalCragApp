"""empty message

Revision ID: b90c345afbd0
Revises: 378bde6285e3
Create Date: 2024-08-25 10:57:44.307444

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "b90c345afbd0"
down_revision = "378bde6285e3"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "map_markers",
        sa.Column("lat", sa.Float(), nullable=True),
        sa.Column("lng", sa.Float(), nullable=True),
        sa.Column(
            "type",
            sa.Enum("TOPO_IMAGE", "AREA", "SECTOR", "CRAG", "PARKING", "ACCESS_POINT", "OTHER", name="mapmarkertype"),
            nullable=False,
        ),
        sa.Column("custom_icon", sa.String(length=120), nullable=True),
        sa.Column("name", sa.String(length=120), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("color", sa.String(length=120), nullable=True),
        sa.Column("crag_id", sa.UUID(), nullable=True),
        sa.Column("sector_id", sa.UUID(), nullable=True),
        sa.Column("area_id", sa.UUID(), nullable=True),
        sa.Column("topo_image_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("time_created", sa.DateTime(), nullable=True),
        sa.Column("time_updated", sa.DateTime(), nullable=True),
        sa.Column("created_by_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["area_id"],
            ["areas.id"],
        ),
        sa.ForeignKeyConstraint(
            ["crag_id"],
            ["crags.id"],
        ),
        sa.ForeignKeyConstraint(["created_by_id"], ["users.id"], ondelete="SET NULL"),
        sa.ForeignKeyConstraint(
            ["sector_id"],
            ["sectors.id"],
        ),
        sa.ForeignKeyConstraint(
            ["topo_image_id"],
            ["topo_images.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )
    with op.batch_alter_table("todos", schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ["id"])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("todos", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="unique")

    op.drop_table("map_markers")
    # ### end Alembic commands ###
