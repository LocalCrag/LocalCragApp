"""empty message

Revision ID: 42cbe6dfd2f4
Revises: 070b390a5efa
Create Date: 2024-11-24 13:59:41.840164

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "42cbe6dfd2f4"
down_revision = "070b390a5efa"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "areas_version",
        sa.Column("name", sa.String(length=120), autoincrement=False, nullable=True),
        sa.Column("short_description", sa.Text(), autoincrement=False, nullable=True),
        sa.Column("description", sa.Text(), autoincrement=False, nullable=True),
        sa.Column("portrait_image_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("sector_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("order_index", sa.Integer(), server_default="0", autoincrement=False, nullable=True),
        sa.Column("secret", sa.Boolean(), server_default="0", autoincrement=False, nullable=True),
        sa.Column("slug", sa.String(), autoincrement=False, nullable=True),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("time_created", sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column("time_updated", sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column("created_by_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("transaction_id", sa.BigInteger(), autoincrement=False, nullable=False),
        sa.Column("end_transaction_id", sa.BigInteger(), nullable=True),
        sa.Column("operation_type", sa.SmallInteger(), nullable=False),
        sa.PrimaryKeyConstraint("id", "transaction_id"),
    )
    with op.batch_alter_table("areas_version", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_areas_version_end_transaction_id"), ["end_transaction_id"], unique=False)
        batch_op.create_index(batch_op.f("ix_areas_version_operation_type"), ["operation_type"], unique=False)
        batch_op.create_index(batch_op.f("ix_areas_version_transaction_id"), ["transaction_id"], unique=False)

    op.create_table(
        "crags_version",
        sa.Column("name", sa.String(length=120), autoincrement=False, nullable=True),
        sa.Column("short_description", sa.Text(), autoincrement=False, nullable=True),
        sa.Column("description", sa.Text(), autoincrement=False, nullable=True),
        sa.Column("rules", sa.Text(), autoincrement=False, nullable=True),
        sa.Column("portrait_image_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("order_index", sa.Integer(), server_default="0", autoincrement=False, nullable=True),
        sa.Column("secret", sa.Boolean(), server_default="0", autoincrement=False, nullable=True),
        sa.Column("slug", sa.String(), autoincrement=False, nullable=True),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("time_created", sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column("time_updated", sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column("created_by_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("transaction_id", sa.BigInteger(), autoincrement=False, nullable=False),
        sa.Column("end_transaction_id", sa.BigInteger(), nullable=True),
        sa.Column("operation_type", sa.SmallInteger(), nullable=False),
        sa.PrimaryKeyConstraint("id", "transaction_id"),
    )
    with op.batch_alter_table("crags_version", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_crags_version_end_transaction_id"), ["end_transaction_id"], unique=False)
        batch_op.create_index(batch_op.f("ix_crags_version_operation_type"), ["operation_type"], unique=False)
        batch_op.create_index(batch_op.f("ix_crags_version_transaction_id"), ["transaction_id"], unique=False)

    op.create_table(
        "lines_version",
        sa.Column("name", sa.String(length=120), autoincrement=False, nullable=True),
        sa.Column("description", sa.Text(), autoincrement=False, nullable=True),
        sa.Column("videos", postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
        sa.Column("grade_name", sa.String(length=120), autoincrement=False, nullable=True),
        sa.Column("grade_scale", sa.String(length=120), autoincrement=False, nullable=True),
        sa.Column("grade_value", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("type", postgresql.ENUM(name="linetypeenum", create_type=False), autoincrement=False, nullable=True),
        sa.Column("rating", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("area_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("fa_year", sa.Integer(), autoincrement=False, nullable=True),
        sa.Column("fa_name", sa.String(length=120), autoincrement=False, nullable=True),
        sa.Column(
            "starting_position",
            postgresql.ENUM(name="startingpositionenum", create_type=False),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("eliminate", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column("traverse", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column("highball", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column("lowball", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column("no_topout", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column("morpho", sa.Boolean(), server_default="0", autoincrement=False, nullable=True),
        sa.Column("bad_dropzone", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column("child_friendly", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column("roof", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column("slab", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column("vertical", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column("overhang", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column("athletic", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column("technical", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column("endurance", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column("cruxy", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column("dyno", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column("jugs", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column("sloper", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column("crimps", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column("pockets", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column("pinches", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column("crack", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column("dihedral", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column("compression", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column("arete", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column("mantle", sa.Boolean(), autoincrement=False, nullable=True),
        sa.Column("secret", sa.Boolean(), server_default="0", autoincrement=False, nullable=True),
        sa.Column("slug", sa.String(), autoincrement=False, nullable=True),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("time_created", sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column("time_updated", sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column("created_by_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("transaction_id", sa.BigInteger(), autoincrement=False, nullable=False),
        sa.Column("end_transaction_id", sa.BigInteger(), nullable=True),
        sa.Column("operation_type", sa.SmallInteger(), nullable=False),
        sa.PrimaryKeyConstraint("id", "transaction_id"),
    )
    with op.batch_alter_table("lines_version", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_lines_version_end_transaction_id"), ["end_transaction_id"], unique=False)
        batch_op.create_index(batch_op.f("ix_lines_version_operation_type"), ["operation_type"], unique=False)
        batch_op.create_index(batch_op.f("ix_lines_version_transaction_id"), ["transaction_id"], unique=False)

    op.create_table(
        "sectors_version",
        sa.Column("name", sa.String(length=120), autoincrement=False, nullable=True),
        sa.Column("description", sa.Text(), autoincrement=False, nullable=True),
        sa.Column("short_description", sa.Text(), autoincrement=False, nullable=True),
        sa.Column("crag_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("portrait_image_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("order_index", sa.Integer(), server_default="0", autoincrement=False, nullable=True),
        sa.Column("rules", sa.Text(), autoincrement=False, nullable=True),
        sa.Column("secret", sa.Boolean(), server_default="0", autoincrement=False, nullable=True),
        sa.Column("slug", sa.String(), autoincrement=False, nullable=True),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("time_created", sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column("time_updated", sa.DateTime(), autoincrement=False, nullable=True),
        sa.Column("created_by_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("transaction_id", sa.BigInteger(), autoincrement=False, nullable=False),
        sa.Column("end_transaction_id", sa.BigInteger(), nullable=True),
        sa.Column("operation_type", sa.SmallInteger(), nullable=False),
        sa.PrimaryKeyConstraint("id", "transaction_id"),
    )
    with op.batch_alter_table("sectors_version", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_sectors_version_end_transaction_id"), ["end_transaction_id"], unique=False)
        batch_op.create_index(batch_op.f("ix_sectors_version_operation_type"), ["operation_type"], unique=False)
        batch_op.create_index(batch_op.f("ix_sectors_version_transaction_id"), ["transaction_id"], unique=False)

    op.create_table(
        "transaction",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("remote_addr", sa.String(length=50), nullable=True),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column("issued_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("transaction", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_transaction_user_id"), ["user_id"], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("transaction", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_transaction_user_id"))

    op.drop_table("transaction")
    with op.batch_alter_table("sectors_version", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_sectors_version_transaction_id"))
        batch_op.drop_index(batch_op.f("ix_sectors_version_operation_type"))
        batch_op.drop_index(batch_op.f("ix_sectors_version_end_transaction_id"))

    op.drop_table("sectors_version")
    with op.batch_alter_table("lines_version", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_lines_version_transaction_id"))
        batch_op.drop_index(batch_op.f("ix_lines_version_operation_type"))
        batch_op.drop_index(batch_op.f("ix_lines_version_end_transaction_id"))

    op.drop_table("lines_version")
    with op.batch_alter_table("crags_version", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_crags_version_transaction_id"))
        batch_op.drop_index(batch_op.f("ix_crags_version_operation_type"))
        batch_op.drop_index(batch_op.f("ix_crags_version_end_transaction_id"))

    op.drop_table("crags_version")
    with op.batch_alter_table("areas_version", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_areas_version_transaction_id"))
        batch_op.drop_index(batch_op.f("ix_areas_version_operation_type"))
        batch_op.drop_index(batch_op.f("ix_areas_version_end_transaction_id"))

    op.drop_table("areas_version")
    # ### end Alembic commands ###
